"use client";

import * as React from "react";
import { DropdownMenu } from "../components/elements/DropdownMenu";
import "./globals.css";
import { Inter } from "next/font/google";
import ScrollTrigger from "react-scroll-trigger";

const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
// 	title: "Create Next App",
// 	description: "Generated by create next app",
// };

// export interface NavigationLink {
// 	type: "link";
// 	title: string;
// 	url: string;
// }

// export interface NavigationList {
// 	type: "list";
// 	title: string;
// 	items: NavigationLink[];
// }

// export type NavigationItem = NavigationLink | NavigationList;

// const navigation: NavigationItem[] = [
// 	{
// 		type: "link",
// 		title: "Home",
// 		url: "/",
// 	},
// 	{
// 		type: "list",
// 		title: "Dropdown",
// 		items: [
// 			{
// 				type: "link",
// 				title: "Dashboard",
// 				url: "#"
// 			}
// 		]
// 	},
// 	{
// 		type: "link",
// 		title: "Services",
// 		url: "#",
// 	},
// 	{
// 		type: "link",
// 		title: "Pricing",
// 		url: "#",
// 	},
// 	{
// 		type: "link",
// 		title: "Contact",
// 		url: "#",
// 	},
// ];

export interface NavigationProps {
	// menu: NavigationItem[];
}

const Navigation: React.FC<NavigationProps> = () => {
	const [exited, setExited] = React.useState(false);

	const className = exited
		? // fixed state
		  "fixed top-0 w-full bg-white transition-all"
		: // static homepage state on desktop
		  "top-[80px] absolute w-full pl-10 pr-10 transition-all";

	return (
		<>
			<div className="navigation">
				{/* @ts-ignore */}
				<ScrollTrigger
					onEnter={() => exited && setExited(false)}
					onExit={() => setExited(true)}
				>
					<div className={className}>
						<nav className="border-gray-200">
							<div className="container mx-auto flex flex-wrap items-center justify-between">
								<a href="#" className="flex">
									<svg
										className="mr-3 h-10"
										width={51}
										height={70}
										viewBox="0 0 51 70"
										fill="none"
										xmlns="http://www.w3.org/2000/svg"
									>
										<g clipPath="url(#clip0)">
											<path
												d="M1 53H27.9022C40.6587 53 51 42.7025 51 30H24.0978C11.3412 30 1 40.2975 1 53Z"
												fill="#76A9FA"
											/>
											<path
												d="M-0.876544 32.1644L-0.876544 66.411C11.9849 66.411 22.4111 55.9847 22.4111 43.1233L22.4111 8.87674C10.1196 8.98051 0.518714 19.5571 -0.876544 32.1644Z"
												fill="#A4CAFE"
											/>
											<path
												d="M50 5H23.0978C10.3413 5 0 15.2975 0 28H26.9022C39.6588 28 50 17.7025 50 5Z"
												fill="#1C64F2"
											/>
										</g>
										<defs>
											<clipPath id="clip0">
												<rect width={51} height={70} fill="white" />
											</clipPath>
										</defs>
									</svg>
									<span className="self-center whitespace-nowrap text-lg font-semibold">
										FlowBite
									</span>
								</a>
								<button
									data-collapse-toggle="mobile-menu"
									type="button"
									className="ml-3 inline-flex items-center justify-center rounded-lg text-gray-400 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-blue-300 md:hidden"
									aria-controls="mobile-menu-2"
									aria-expanded="false"
								>
									<span className="sr-only">Open main menu</span>
									<svg
										className="h-6 w-6"
										fill="currentColor"
										viewBox="0 0 20 20"
										xmlns="http://www.w3.org/2000/svg"
									>
										<path
											fillRule="evenodd"
											d="M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z"
											clipRule="evenodd"
										/>
									</svg>
									<svg
										className="hidden h-6 w-6"
										fill="currentColor"
										viewBox="0 0 20 20"
										xmlns="http://www.w3.org/2000/svg"
									>
										<path
											fillRule="evenodd"
											d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
											clipRule="evenodd"
										/>
									</svg>
								</button>
								<div
									className="hidden w-full md:block md:w-auto"
									id="mobile-menu"
								>
									<ul className="mt-4 flex flex-col md:mt-0 md:flex-row md:space-x-8 md:text-sm md:font-medium">
										<li>
											<a
												href="#"
												className="block rounded bg-blue-700 py-2 pl-3 pr-4 text-white focus:outline-none md:bg-transparent md:p-0 md:text-blue-700"
												aria-current="page"
											>
												Home
											</a>
										</li>
										<li>
											<DropdownMenu />
										</li>
										<li>
											<a
												href="#"
												className="block border-b border-gray-100 py-2 pl-3 pr-4 text-gray-700 hover:bg-gray-50 md:border-0 md:p-0 md:hover:bg-transparent md:hover:text-blue-700"
											>
												Services
											</a>
										</li>
										<li>
											<a
												href="#"
												className="block border-b border-gray-100 py-2 pl-3 pr-4 text-gray-700 hover:bg-gray-50 md:border-0 md:p-0 md:hover:bg-transparent md:hover:text-blue-700"
											>
												Pricing
											</a>
										</li>
										<li>
											<a
												href="#"
												className="block border-b border-gray-100 py-2 pl-3 pr-4 text-gray-700 hover:bg-gray-50 md:border-0 md:p-0 md:hover:bg-transparent md:hover:text-blue-700"
											>
												Contact
											</a>
										</li>
									</ul>
								</div>
							</div>
						</nav>
					</div>
				</ScrollTrigger>
			</div>
			{/* <div className="mt-[40px]" /> */}
		</>
	);
};

export interface RootLayoutProps extends React.PropsWithChildren {}

const RootLayout: React.FC<RootLayoutProps> = ({ children }) => {
	return (
		<html lang="en">
			<body className={inter.className}>
				<Navigation />
				<main>{children}</main>
			</body>
		</html>
	);
};

export default RootLayout;
